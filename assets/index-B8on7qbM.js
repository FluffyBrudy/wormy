(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();const m=810,g=510,r=30,y=Math.floor(m/r),v=Math.floor(g/r),S=-1,d=0,E={basic:Math.floor(r/5)},C={LEFT:[-1,0],RIGHT:[1,0],UP:[0,-1],DOWN:[0,1]},M=[[5,5],[6,5],[6,6]],x=50;function P(a,e){const[t,s]=[Math.max(e,a),Math.min(e,a)];return Math.floor(s+(t-s+1)*Math.random())}function D(a){const e=a.length;if(e<1)throw new Error("sequence cannot be empty");const t=P(0,e);return a[t]}function T(a){for(let e=a.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[a[e],a[t]]=[a[t],a[e]]}return a}function A(a,e,t=1){if(!e)throw alert(`${e}`),new Error("not valid coor");const s=r*e[0]+r/2,n=r*e[1]+r/2;a.beginPath(),a.arc(s,n,E.basic*t,0,2*Math.PI),a.fillStyle="#FF0000",a.fill(),a.closePath()}function f(a){const e=new Set(a.map(([s,n])=>`${s},${n}`)),t=[];for(let s=0;s<v;s++)for(let n=0;n<y;n++){const i=`${n},${s}`;e.has(i)||t.push([n,s])}return t.length===0?[S,S]:D(T(t))}function L(){const a={scale:1,dir:-1,ulimit:1,llimit:.5,speed:.05,animate(){this.scale>this.ulimit?(this.dir*=-1,this.scale=this.ulimit):this.scale<this.llimit&&(this.dir*=-1,this.scale=this.llimit),this.scale+=this.speed*this.dir},getScale(){return this.scale}};return{animate:a.animate.bind(a),getScale:a.getScale.bind(a)}}function O(a){a.strokeStyle="rgba(255, 255, 255, 0.1)",a.lineWidth=2,a.beginPath();for(let e=0;e<=v;e++)a.moveTo(0,e*r),a.lineTo(m,e*r);for(let e=0;e<=y;e++)a.moveTo(e*r,0),a.lineTo(e*r,g);a.stroke(),a.closePath()}function R(a){const[e,t]=a;return e<0||e>=y||t<0||t>=v}function w(a,e){return a[0]===e[0]&&a[1]===e[1]}function I(a,e,t){const[s,n]=e[d];p(s,n,a,"head"),H(e[d],t,a),e.slice(1,e.length-1).forEach(([l,c])=>{p(l,c,a,"body")});const[i,o]=e[e.length-1];p(i,o,a,"tail")}function N(a,e){const[t,s]=C[e];let[n,i]=a[0],[o,l]=[n+t,i+s];a.unshift([o,l]),a.pop()}function G(a,e){const t=a[d],[s,n]=C[e],i=[t[0]+s,t[1]+n];a.unshift(i)}const q={LEFT:{first:[r*.2,r*.2],second:[r*.2,r*.7]},RIGHT:{first:[r*.7,r*.2],second:[r*.7,r*.7]},UP:{first:[r*.2,r*.2],second:[r*.7,r*.2]},DOWN:{first:[r*.2,r*.7],second:[r*.7,r*.7]}};function p(a,e,t,s="body"){const n=s==="head"?"red":"lime",i="green",o=a*r,l=e*r;t.beginPath(),t.fillStyle=n,t.roundRect(o,l,r,r,5),t.strokeStyle=i,t.fill(),t.stroke(),t.closePath()}function H(a,e,t){const[s,n]=a,i=q[e],o=[s*r+i.first[0],n*r+i.first[1]],l=[s*r+i.second[0],n*r+i.second[1]],c=r/10;t.rect(...o,c,c),t.rect(...l,c,c),t.fillStyle="brown",t.strokeStyle="red",t.fill(),t.stroke(),t.closePath()}function F(a){return a.slice(1).some(e=>w(a[d],e))}function u(a,e,t="default"){const s=document.createElement("button");return s.className=`ui-btn ${t!=="default"?t:""}`,s.textContent=a,s.addEventListener("click",n=>{const i=document.createElement("span");i.className="ripple";const o=s.getBoundingClientRect();i.style.left=`${n.clientX-o.left-10}px`,i.style.top=`${n.clientY-o.top-10}px`,s.appendChild(i),i.addEventListener("animationend",()=>{i.remove()}),e(n)}),s.addEventListener("mouseenter",n=>{const i=document.createElement("span");i.className="ripple";const o=s.getBoundingClientRect();i.style.left=`${n.clientX-o.left-10}px`,i.style.top=`${n.clientY-o.top-10}px`,s.appendChild(i),i.addEventListener("animationend",()=>{i.remove()})}),s}class b{element;constructor(e){if(this.element=document.createElement("div"),this.element.className="ui-menu",e){const t=document.createElement("h1");t.textContent=e,this.element.appendChild(t)}this.hide()}add(e){this.element.appendChild(e)}addRadioOptions(e,t){const s=document.createElement("div");s.className="radio-options-container";const n=u(e,()=>{const l=i.style.display==="flex";i.style.display=l?"none":"flex"});s.appendChild(n);const i=document.createElement("div");i.className="radio-options-group",i.style.display="none";let o=null;Object.entries(t).forEach(([l,c])=>{const h=document.createElement("button");h.textContent=l,h.className="radio-button ui-btn",h.onclick=()=>{o&&o.classList.remove("selected"),h.classList.add("selected"),o=h,c(l)},i.appendChild(h)}),s.appendChild(i),this.element.appendChild(s)}mount(e){e.appendChild(this.element)}setAt(e,t){this.element.style.position="absolute",this.element.style.left=`${e}px`,this.element.style.top=`${t}px`}clear(){this.element.innerHTML=""}show(){this.element.style.display="",this.element.setAttribute("aria-hidden","false"),this.element.style.pointerEvents="auto",this.element.querySelector("button")?.focus()}hide(){this.element.style.display="none",this.element.setAttribute("aria-hidden","true"),this.element.style.pointerEvents="none"}resize(e,t){this.element.style.width=`${e}px`,this.element.style.height=`${t}px`,this.element.style.boxSizing="border-box"}}class B{element;scoreValue;highScoreValue;currentScore=0;highScore=0;animationId=null;constructor(){this.element=document.createElement("div"),this.element.className="score-display",this.highScore=Number.parseInt(localStorage.getItem("snake-high-score")||"0"),this.createElement()}createElement(){this.element.innerHTML=`
      <div class="score-container">
        <div class="score-item current-score">
          <div class="score-label">SCORE</div>
          <div class="score-value" id="current-score">0</div>
          <div class="score-glow"></div>
        </div>
        <div class="score-divider"></div>
        <div class="score-item high-score">
          <div class="score-label">BEST</div>
          <div class="score-value" id="high-score">${this.highScore}</div>
          <div class="score-glow"></div>
        </div>
      </div>
      <div class="score-particles"></div>
    `,this.scoreValue=this.element.querySelector("#current-score"),this.highScoreValue=this.element.querySelector("#high-score")}updateScore(e){const t=this.currentScore;this.currentScore=e,this.animateScoreChange(t,e),e>this.highScore&&(this.highScore=e,this.highScoreValue.textContent=e.toString(),localStorage.setItem("snake-high-score",e.toString()),this.triggerHighScoreEffect()),e>t&&this.createScoreParticles()}animateScoreChange(e,t){this.animationId&&cancelAnimationFrame(this.animationId);const s=300,n=performance.now(),i=o=>{const l=o-n,c=Math.min(l/s,1),h=1-Math.pow(1-c,3),k=Math.floor(e+(t-e)*h);this.scoreValue.textContent=k.toString(),c<1&&(this.animationId=requestAnimationFrame(i))};this.animationId=requestAnimationFrame(i)}triggerHighScoreEffect(){const e=this.element.querySelector(".high-score");e.classList.add("new-high-score"),this.createCelebrationParticles(),setTimeout(()=>{e.classList.remove("new-high-score")},2e3)}createScoreParticles(){const e=this.element.querySelector(".score-particles");for(let t=0;t<5;t++){const s=document.createElement("div");s.className="score-particle",s.textContent="+1";const n=Math.PI*2*t/5,i=50+Math.random()*30,o=Math.cos(n)*i,l=Math.sin(n)*i;s.style.setProperty("--x",`${o}px`),s.style.setProperty("--y",`${l}px`),e.appendChild(s),setTimeout(()=>{s.remove()},1e3)}}createCelebrationParticles(){const e=this.element.querySelector(".score-particles");for(let t=0;t<20;t++){const s=document.createElement("div");s.className="celebration-particle";const n=Math.PI*2*t/20,i=80+Math.random()*50,o=Math.cos(n)*i,l=Math.sin(n)*i;s.style.setProperty("--x",`${o}px`),s.style.setProperty("--y",`${l}px`),s.style.backgroundColor=`hsl(${Math.random()*360}, 70%, 60%)`,e.appendChild(s),setTimeout(()=>{s.remove()},2e3)}}mount(e){e.appendChild(this.element)}show(){this.element.style.display="block"}hide(){this.element.style.display="none"}reset(){this.currentScore=0,this.scoreValue.textContent="0"}setAt(e,t){this.element.style.position="absolute",this.element.style.left=`${e-this.element.clientWidth/2}px`,this.element.style.top=`${t-this.element.clientHeight}px`}}class ${element;constructor(){this.element=document.createElement("div"),this.element.className="game-overlay",this.createElement(),this.startParticleSystem(),this.attachContinueButtonListener()}createElement(){this.element.innerHTML=`
      <div class="overlay-content">
        <div class="game-title">
          <h1>WORMY</h1>
          <div class="title-glow"></div>
        </div>
        <div class="game-subtitle">The Ultimate Snake Experience</div>
        <div class="particle-container"></div>
        <button class="continue-btn">Click to Continue</button>
      </div>
    `}startParticleSystem(){const e=this.element.querySelector(".particle-container");setInterval(()=>{this.createParticle(e)},200)}createParticle(e){const t=document.createElement("div");t.className="floating-particle";const s=["#00ff7f","#00bfff","#ff00ff","#ffff00"];t.style.backgroundColor=s[Math.floor(Math.random()*s.length)],t.style.left=Math.random()*100+"%",t.style.animationDuration=3+Math.random()*4+"s",t.style.animationDelay=Math.random()*2+"s",e.appendChild(t),setTimeout(()=>{t.remove()},7e3)}attachContinueButtonListener(){this.element.addEventListener("click",e=>{e.target.classList.contains("continue-btn")&&this.hide()})}mount(e){e.appendChild(this.element)}show(){this.element.style.display="flex"}hide(){this.element.style.display="none"}}class Y{element;finalScoreElement;highScoreElement;gameStatsElement;isNewHighScore=!1;constructor(){this.element=document.createElement("div"),this.element.className="game-over-screen",this.createElement(),this.startParticleSystem()}createElement(){this.element.innerHTML=`
      <div class="game-over-overlay">
        <div class="game-over-content">
          <div class="skull-animation">💀</div>
          <h1 class="game-over-title">GAME OVER</h1>
          <div class="score-section">
            <div class="final-score">
              <span class="score-label">FINAL SCORE</span>
              <span class="score-value" id="final-score">0</span>
            </div>
            <div class="high-score-display">
              <span class="score-label">BEST SCORE</span>
              <span class="score-value" id="game-over-high-score">0</span>
            </div>
          </div>
          <div class="game-stats" id="game-stats">
            <div class="stat-item">
              <span class="stat-label">TIME SURVIVED</span>
              <span class="stat-value" id="time-survived">0:00</span>
            </div>
            <div class="stat-item">
              <span class="stat-label">FOODS EATEN</span>
              <span class="stat-value" id="foods-eaten">0</span>
            </div>
            <div class="stat-item">
              <span class="stat-label">MAX LENGTH</span>
              <span class="stat-value" id="max-length">3</span>
            </div>
          </div>
          <div class="button-container">
            <button class="game-over-btn try-again-btn" id="try-again">
              <span class="btn-icon">🔄</span>
              TRY AGAIN
            </button>
            <button class="game-over-btn main-menu-btn" id="main-menu">
              <span class="btn-icon">🏠</span>
              MAIN MENU
            </button>
          </div>
          <div class="motivational-text" id="motivational-text">
            Better luck next time!
          </div>
        </div>
        <div class="particle-container"></div>
        <div class="lightning-container"></div>
      </div>
    `,this.finalScoreElement=this.element.querySelector("#final-score"),this.highScoreElement=this.element.querySelector("#game-over-high-score"),this.gameStatsElement=this.element.querySelector("#game-stats")}startParticleSystem(){const e=this.element.querySelector(".particle-container");setInterval(()=>{const s=document.createElement("div");s.className="death-particle";const n=["#ff4757","#ff3838","#ff6b7a","#c44569"];s.style.backgroundColor=n[Math.floor(Math.random()*n.length)],s.style.left=Math.random()*100+"%",s.style.animationDuration=2+Math.random()*3+"s",s.style.animationDelay=Math.random()*2+"s",e.appendChild(s),setTimeout(()=>{s.remove()},5e3)},300)}createLightningEffect(){const e=this.element.querySelector(".lightning-container");for(let t=0;t<3;t++)setTimeout(()=>{const s=document.createElement("div");s.className="lightning-bolt",s.style.left=Math.random()*100+"%",s.style.animationDelay=Math.random()*.5+"s",e.appendChild(s),setTimeout(()=>{s.remove()},1e3)},t*200)}getMotivationalText(e,t){if(t)return"A new high score? About time you did something right...";if(e===0)return"Zero again? Maybe this just isn’t your thing.";if(e<5)return"Is that all you got? Even a turtle beats you.";if(e<10)return"Still struggling, huh? You call that effort?";if(e<20)return"Barely scraping by. Step it up or give up.";{const s=["Wow, look at you... barely above average.","Congrats on mediocrity. Try harder next time.","Your snake is slow. Is it tired or just lazy?","Don’t get cocky, that was nothing special.","Keep dreaming if you think that’s good.","A snail could beat that score on a good day.","If I were you, I’d rethink my life choices.","Not impressed. Try again, maybe someday you'll improve."];return s[Math.floor(Math.random()*s.length)]}}show(e){this.isNewHighScore=e.isNewHighScore,this.finalScoreElement.textContent=e.finalScore.toString(),this.highScoreElement.textContent=e.highScore.toString();const t=Math.floor(e.timeSurvived/60),s=e.timeSurvived%60,n=`${t}:${s.toString().padStart(2,"0")}`;this.element.querySelector("#time-survived").textContent=n,this.element.querySelector("#foods-eaten").textContent=e.foodsEaten.toString(),this.element.querySelector("#max-length").textContent=e.maxLength.toString();const i=this.element.querySelector("#motivational-text");i.textContent=this.getMotivationalText(e.finalScore,e.isNewHighScore),e.isNewHighScore?(this.element.classList.add("new-high-score"),this.createLightningEffect(),i.classList.add("celebration")):(this.element.classList.remove("new-high-score"),i.classList.remove("celebration")),this.element.style.display="flex",setTimeout(()=>{this.element.classList.add("show")},100)}hide(){this.element.classList.remove("show"),setTimeout(()=>{this.element.style.display="none"},300)}mount(e){e.appendChild(this.element)}onTryAgain(e){this.element.querySelector("#try-again").addEventListener("click",e)}onMainMenu(e){this.element.querySelector("#main-menu").addEventListener("click",e)}}class W{audioContext=null;sounds=new Map;enabled=!0;constructor(){this.initAudioContext(),this.generateSounds()}initAudioContext(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext)}catch{console.warn("Web Audio API not supported")}}generateSounds(){this.audioContext&&(this.sounds.set("eat",this.generateEatSound()),this.sounds.set("gameOver",this.generateGameOverSound()),this.sounds.set("click",this.generateClickSound()),this.sounds.set("highScore",this.generateHighScoreSound()))}generateEatSound(){if(!this.audioContext)return new AudioBuffer({length:1,sampleRate:44100});const e=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,e*.2,e),n=s.getChannelData(0);for(let i=0;i<s.length;i++){const o=i/e,l=800+Math.sin(o*20)*200,c=Math.exp(-o*8);n[i]=Math.sin(2*Math.PI*l*o)*c*.3}return s}generateGameOverSound(){if(!this.audioContext)return new AudioBuffer({length:1,sampleRate:44100});const e=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,e*1.5,e),n=s.getChannelData(0);for(let i=0;i<s.length;i++){const o=i/e,l=200-o*150,c=Math.exp(-o*2),h=(Math.random()-.5)*.1;n[i]=(Math.sin(2*Math.PI*l*o)+h)*c*.4}return s}generateClickSound(){if(!this.audioContext)return new AudioBuffer({length:1,sampleRate:44100});const e=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,e*.1,e),n=s.getChannelData(0);for(let i=0;i<s.length;i++){const o=i/e,l=1e3,c=Math.exp(-o*20);n[i]=Math.sin(2*Math.PI*l*o)*c*.2}return s}generateHighScoreSound(){if(!this.audioContext)return new AudioBuffer({length:1,sampleRate:44100});const e=this.audioContext.sampleRate,s=this.audioContext.createBuffer(1,e*2,e),n=s.getChannelData(0);for(let i=0;i<s.length;i++){const o=i/e,l=440+Math.sin(o*8)*220+o*200,c=Math.exp(-o*1.5)*(1+Math.sin(o*15)*.3);n[i]=Math.sin(2*Math.PI*l*o)*c*.3}return s}play(e,t=1){if(!(!this.enabled||!this.audioContext||!this.sounds.has(e)))try{const s=this.sounds.get(e),n=this.audioContext.createBufferSource(),i=this.audioContext.createGain();n.buffer=s,i.gain.value=t,n.connect(i),i.connect(this.audioContext.destination),n.start()}catch(s){console.warn("Error playing sound:",s)}}toggle(){return this.enabled=!this.enabled,this.enabled}isEnabled(){return this.enabled}}class X{particles=[];createFoodParticles(e){const[t,s]=e,n=t*r+r/2,i=s*r+r/2,o=["#ff4757","#ff6b7a","#ffa502","#ffdd59"];for(let l=0;l<12;l++){const c=Math.PI*2*l/12,h=2+Math.random()*3;this.particles.push({x:n,y:i,vx:Math.cos(c)*h,vy:Math.sin(c)*h,life:30,maxLife:30,color:o[Math.floor(Math.random()*o.length)],size:3+Math.random()*2})}}createCollisionParticles(e){const[t,s]=e,n=t*r+r/2,i=s*r+r/2,o=["#ff4757","#ff3838","#c44569"];for(let l=0;l<20;l++){const c=Math.random()*Math.PI*2,h=3+Math.random()*5;this.particles.push({x:n,y:i,vx:Math.cos(c)*h,vy:Math.sin(c)*h,life:40,maxLife:40,color:o[Math.floor(Math.random()*o.length)],size:4+Math.random()*3})}}update(){this.particles=this.particles.filter(e=>(e.x+=e.vx,e.y+=e.vy,e.vx*=.98,e.vy*=.98,e.life--,e.life>0))}draw(e){this.particles.forEach(t=>{const s=t.life/t.maxLife,n=t.size*s;e.save(),e.globalAlpha=s,e.fillStyle=t.color,e.shadowColor=t.color,e.shadowBlur=10,e.beginPath(),e.arc(t.x,t.y,n,0,Math.PI*2),e.fill(),e.restore()})}clear(){this.particles=[]}}class V{intensity=0;duration=0;currentTime=0;shake(e,t){this.intensity=e,this.duration=t,this.currentTime=0}update(){return this.currentTime<this.duration?(this.currentTime++,!0):!1}getOffset(){if(this.currentTime>=this.duration)return[0,0];const e=this.currentTime/this.duration,t=this.intensity*(1-e);return[(Math.random()-.5)*t*2,(Math.random()-.5)*t*2]}}class z{ctx;canvas;fps=10;lastFrameTime=0;frameDuration=1e3/this.fps;snakeDirection="LEFT";snakePositions=M.slice();foodPosition=f(this.snakePositions);foodAnimationHandler;foodCounts={basic:100};isPaused=!1;isStarted=!1;callbackMap={pause:()=>"Abstracted, passed externally",over:()=>"Abstracted, pass externallyx"};scoreDisplay;gameOverScreen;soundManager;particleSystem;screenShake;gameStartTime=0;maxSnakeLength=3;constructor(){this.foodAnimationHandler=L(),this.canvas=document.querySelector("canvas"),this.ctx=this.canvas.getContext("2d"),this.ctx.beginPath(),this.ctx.fillStyle="black",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.closePath(),this.loop=this.loop.bind(this),this.scoreDisplay=new B,this.gameOverScreen=new Y,this.soundManager=new W,this.particleSystem=new X,this.screenShake=new V}setDifficulty(e){const t={easy:10,normal:14,hard:18};this.fps=t[e],this.frameDuration=1e3/this.fps,console.log(this.frameDuration)}startGame(){this.isStarted=!0,this.gameStartTime=Date.now()}pauseGame(){this.isStarted&&(this.isPaused=!0,this.callbackMap.pause())}resumeGame(){this.isStarted&&(this.isPaused=!1)}getGameStatus(){return{isStarted:this.isStarted,isPaused:this.isPaused}}resetAttributes(){this.snakeDirection="LEFT",this.snakePositions=M.slice(),this.foodCounts.basic=0,this.maxSnakeLength=3,this.scoreDisplay.reset(),this.isPaused=!1,this.isStarted=!1,this.particleSystem.clear(),this.foodPosition=f(this.snakePositions)}getFoodsCount(){return this.foodCounts}setCallbacks(e){this.callbackMap.pause=e.pause,this.callbackMap.over=e.over}handleFoodCollision(){w(this.snakePositions[d],this.foodPosition)&&(this.soundManager.play("eat"),this.particleSystem.createFoodParticles(this.foodPosition),G(this.snakePositions,this.snakeDirection),this.foodCounts.basic+=1,this.maxSnakeLength=Math.max(this.maxSnakeLength,this.snakePositions.length),this.scoreDisplay.updateScore(this.foodCounts.basic),this.foodPosition=f(this.snakePositions))}handleWallCollision(){R(this.snakePositions[d])&&(this.particleSystem.createCollisionParticles(this.snakePositions[d]),this.screenShake.shake(10,20),this.soundManager.play("gameOver"),this.isStarted=!1,this.isPaused=!0,this.callbackMap.over())}handleSelfCOllision(){F(this.snakePositions)&&(this.particleSystem.createCollisionParticles(this.snakePositions[d]),this.screenShake.shake(8,15),this.soundManager.play("gameOver"),this.isStarted=!1,this.isPaused=!0,this.callbackMap.over())}displayWindow(){this.ctx.fill()}getCanvas(){return this.canvas}updateSnakeDirection(e){this.snakeDirection=e}getSnakeDirection(){return this.snakeDirection}update(){this.isPaused||!this.isStarted||(N(this.snakePositions,this.snakeDirection),this.foodAnimationHandler.animate(),this.particleSystem.update(),this.screenShake.update(),this.handleFoodCollision(),this.handleWallCollision(),this.handleSelfCOllision())}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const[e,t]=this.screenShake.getOffset();this.ctx.save(),this.ctx.translate(e,t),O(this.ctx),A(this.ctx,this.foodPosition,this.foodAnimationHandler.getScale()),I(this.ctx,this.snakePositions,this.snakeDirection),this.particleSystem.draw(this.ctx),this.ctx.restore()}loop(e){if(!this.isStarted){requestAnimationFrame(this.loop);return}e-this.lastFrameTime>this.frameDuration&&(this.lastFrameTime=e,this.update(),this.draw()),requestAnimationFrame(this.loop)}run(){requestAnimationFrame(this.loop)}getScoreDisplay(){return this.scoreDisplay}getGameStats(){const e=Date.now(),t=Math.floor((e-this.gameStartTime)/1e3),s=Number.parseInt(localStorage.getItem("snake-high-score")||"0"),n=this.foodCounts.basic>s;return{finalScore:this.foodCounts.basic,highScore:Math.max(s,this.foodCounts.basic),timeSurvived:t,foodsEaten:this.foodCounts.basic,maxLength:this.maxSnakeLength,isNewHighScore:n}}getGameOverScreen(){return this.gameOverScreen}getSoundManager(){return this.soundManager}}class U{game;startMenu;pauseMenu;eventTimer=0;canvasRect;constructor(){const e=this.initCanvas();this.canvasRect=e,this.game=new z;const t=new $;t.mount(document.body),this.game.getScoreDisplay().mount(document.body),this.game.getScoreDisplay().show(),this.startMenu=new b,this.pauseMenu=new b,this.startMenu.add(u("Start",()=>{this.game.getSoundManager().play("click"),this.game.startGame(),this.startMenu.hide(),t.hide()})),this.startMenu.addRadioOptions("Difficulty",{easy:()=>this.game.setDifficulty("easy"),normal:()=>this.game.setDifficulty("normal"),hard:()=>this.game.setDifficulty("hard")}),this.startMenu.add(u("🔊 Sound: ON",s=>{const n=this.game.getSoundManager().toggle(),i=s.target;i.textContent=n?"🔊 Sound: ON":"🔇 Sound: OFF"})),this.pauseMenu.add(u("Resume",()=>{this.game.getSoundManager().play("click"),this.game.resumeGame(),this.pauseMenu.hide()})),this.pauseMenu.add(u("Main Menu",()=>{this.game.getSoundManager().play("click"),this.pauseMenu.hide(),this.startMenu.show(),this.game.resetAttributes()})),this.startMenu.mount(document.body),this.pauseMenu.mount(document.body),this.startMenu.show(),this.pauseMenu.hide(),this.game.getGameOverScreen().mount(document.body),this.game.getGameOverScreen().onTryAgain(()=>{this.game.getSoundManager().play("click"),this.game.getGameOverScreen().hide(),this.game.resetAttributes(),this.game.startGame()}),this.game.getGameOverScreen().onMainMenu(()=>{this.game.getSoundManager().play("click"),this.game.getGameOverScreen().hide(),this.game.resetAttributes(),this.startMenu.show()}),requestAnimationFrame(()=>{this.startMenu.resize(e.width+10,e.height+10),this.startMenu.setAt(this.canvasRect.left+this.canvasRect.width/2,this.canvasRect.top+this.canvasRect.height/2),this.pauseMenu.setAt(this.canvasRect.left+this.canvasRect.width/2,this.canvasRect.top+this.canvasRect.height/2),this.game.getScoreDisplay().setAt(this.canvasRect.left+e.width/2,this.canvasRect.top)}),this.game.setCallbacks({pause:()=>this.pauseMenu.show(),over:()=>{const s=this.game.getGameStats();s.isNewHighScore&&this.game.getSoundManager().play("highScore"),setTimeout(()=>{this.game.getGameOverScreen().show(s)},500)}}),this.registerEvents(),this.game.run()}initCanvas(){const e=document.createElement("canvas");return window.addEventListener("reset",()=>{e.width=m,e.height=g}),e.width=m,e.height=g,document.querySelector("#app")?.appendChild(e),e.getBoundingClientRect()}registerEvents(){window.addEventListener("keydown",e=>{if(Date.now()-this.eventTimer<x)return;this.eventTimer=Date.now();const{isPaused:s,isStarted:n}=this.game.getGameStatus();if(e.key==="Escape"&&n){s||(this.game.pauseGame(),this.pauseMenu.show());return}if(s||!n)return;const i=this.game.getSnakeDirection();e.key=="ArrowLeft"&&i!=="RIGHT"?this.game.updateSnakeDirection("LEFT"):e.key=="ArrowRight"&&i!=="LEFT"?this.game.updateSnakeDirection("RIGHT"):e.key=="ArrowUp"&&i!=="DOWN"?this.game.updateSnakeDirection("UP"):e.key=="ArrowDown"&&i!=="UP"&&this.game.updateSnakeDirection("DOWN")})}}window.onload=()=>{new U};
